# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
#- task: SonarCloudPrepare@1
 # inputs:
    # SonarCloud: 'SonarCloud'
    # organization: 'test-user-09'
    # scannerMode: 'Other'
    # extraProperties: |
    #   # Additional properties that will be passed to the scanner,
    #   # Put one key=value per line, example:
    #   # sonar.exclusions=**/*.bin
    #   sonar.projectKey=Test-User-09_spring-boot-cs
    #   sonar.projectName=spring-boot-cs
- task: Maven@3 
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    options: '-e'
    jdkArchitectureOption: 'x64'
    #publishJUnitResults: true
    #codeCoverageToolOption: 'JaCoCo'
    #sonarQubeRunAnalysis: true
    #isJacocoCoverageReportXML: true
    #sqMavenPluginVersionChoice: 'latest'
    #sonarQubeRunAnalysis: true
    #sqMavenPluginVersionChoice: 'latest'
    goals: 'package'
#- task: SonarCloudAnalyze@1
- task: CopyFiles@2
  inputs:
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'build'
  condition: succeededOrFailed()

    

 #-task: AzureRmWebAppDeployment@4
  #inputs:
  #  ConnectionType: 'AzureRM'
   # azureSubscription: 'Azure subscription 1(3492ff1b-3b91-4beb-bb22-fe498240d8bc)'
    #appType: 'webAppLinux'
    #WebAppName: 'spring-boot-cs'
   # packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
   # RuntimeStack: 'JAVA|11-java11'